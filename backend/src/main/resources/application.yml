server:
  port: 8080

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  # Internationalization Configuration
  messages:
    basename: messages
    encoding: UTF-8
    fallback-to-system-locale: false
    use-code-as-default-message: false

---
# 開発環境（H2 Database）
spring:
  profiles: dev
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql
  # Redis設定（Dev Container環境）
  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 10
        max-idle: 10
        min-idle: 1
        max-wait: -1ms

app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}

logging:
  level:
    com.techbookstore: DEBUG
    org.springframework.security: DEBUG

---
# プレ本番環境（PostgreSQL）
spring:
  profiles: staging
  datasource:
    url: jdbc:postgresql://localhost:5432/techbookstore
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect
    show-sql: false

app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://staging.techbookstore.com}

---
# 本番環境（Azure）
spring:
  profiles: prod
  datasource:
    url: jdbc:postgresql://${AZURE_POSTGRESQL_HOST}:5432/${AZURE_POSTGRESQL_DATABASE}?ssl=true&sslmode=require
    username: ${AZURE_POSTGRESQL_USERNAME}
    password: ${AZURE_POSTGRESQL_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect
    show-sql: false
  redis:
    host: ${AZURE_REDIS_HOST}
    port: 6380
    password: ${AZURE_REDIS_KEY}
    ssl: true

app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://techbookstore.com}

# Azure Application Insights
azure:
  application-insights:
    instrumentation-key: ${APPLICATIONINSIGHTS_INSTRUMENTATION_KEY}

logging:
  level:
    com.techbookstore: INFO
    org.springframework.security: WARN